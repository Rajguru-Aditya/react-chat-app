{"ast":null,"code":"var _jsxFileName = \"/home/apollonox/Documents/chat-app/client/src/components/Chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    var connectionOptions = {\n      \"force new connection\": true,\n      \"reconnectionAttempts\": \"Infinity\",\n      \"timeout\": 10000,\n      \"transports\": [\"websocket\"]\n    };\n    socket = io.connect(ENDPOINT, connectionOptions); // socket= io(ENDPOINT);\n\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    });\n  }, [ENDPOINT, location.search]);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Chat\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"d0IL40A6in8C0M9kpYxzMuyI8u0=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/apollonox/Documents/chat-app/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","socket","Chat","location","name","setName","room","setRoom","ENDPOINT","parse","search","connectionOptions","connect","emit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAE,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMW,QAAQ,GAAG,gBAAjB;AACAV,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM;AAACM,MAAAA,IAAD;AAAOE,MAAAA;AAAP,QAAeP,WAAW,CAACU,KAAZ,CAAkBN,QAAQ,CAACO,MAA3B,CAArB;AAEA,QAAIC,iBAAiB,GAAI;AACrB,8BAAyB,IADJ;AAErB,8BAAwB,UAFH;AAGrB,iBAAY,KAHS;AAIrB,oBAAe,CAAC,WAAD;AAJM,KAAzB;AAOAV,IAAAA,MAAM,GAAGD,EAAE,CAACY,OAAH,CAAWJ,QAAX,EAAoBG,iBAApB,CAAT,CAVY,CAYZ;;AAEAN,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAL,IAAAA,MAAM,CAACY,IAAP,CAAY,MAAZ,EAAoB;AAAET,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB;AACH,GAlBQ,EAkBN,CAACE,QAAD,EAAWL,QAAQ,CAACO,MAApB,CAlBM,CAAT;AAmBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CA1BD;;GAAMR,I;;KAAAA,I;AA4BN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\nlet socket;\n\nconst Chat =({ location }) => {\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const ENDPOINT = 'localhost:5000';\n    useEffect(() => {\n        const {name, room} = queryString.parse(location.search);\n\n        var connectionOptions =  {\n            \"force new connection\" : true,\n            \"reconnectionAttempts\": \"Infinity\", \n            \"timeout\" : 10000,                  \n            \"transports\" : [\"websocket\"]\n        };\n\n        socket = io.connect(ENDPOINT,connectionOptions);\n\n        // socket= io(ENDPOINT);\n\n        setName(name);\n        setRoom(room);\n\n        socket.emit('join', { name, room });\n    }, [ENDPOINT, location.search]);\n    return(\n        <h1>Chat</h1>\n    )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}