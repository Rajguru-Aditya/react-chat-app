{"ast":null,"code":"import _toConsumableArray from\"/home/apollonox/Documents/chat-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/apollonox/Documents/chat-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import queryString from'query-string';import io from'socket.io-client';import'./Chat.css';import TextContainer from'../TextContainer/TextContainer';import InfoBar from'../InfoBar/InfoBar';import Input from'../Input/Input';import Messages from'../Messages/Messages';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var socket;var Chat=function Chat(_ref){var location=_ref.location;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),room=_useState4[0],setRoom=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),users=_useState6[0],setUsers=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),message=_useState8[0],setMessage=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),messages=_useState10[0],setMessages=_useState10[1];var ENDPOINT='https://aditya-react-chat-app.herokuapp.com/';useEffect(function(){var _queryString$parse=queryString.parse(location.search),name=_queryString$parse.name,room=_queryString$parse.room;var connectionOptions={\"force new connection\":true,\"reconnectionAttempts\":\"Infinity\",\"timeout\":10000,\"transports\":[\"websocket\"]};socket=io.connect(ENDPOINT,connectionOptions);// socket= io(ENDPOINT);\nsetName(name);setRoom(room);socket.emit('join',{name:name,room:room},function(){});return function(){socket.emit('disconnect');socket.off();};},[ENDPOINT,location.search]);useEffect(function(){socket.on('message',function(message){setMessages([].concat(_toConsumableArray(messages),[message]));});socket.on(\"roomData\",function(_ref2){var users=_ref2.users;setUsers(users);});return function(){socket.off();};},[messages]);var sendMessage=function sendMessage(event){event.preventDefault();if(message){socket.emit('sendMessage',message,function(){return setMessage('');});}};console.log(message,messages);return/*#__PURE__*/_jsxs(\"div\",{className:\"outerContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(InfoBar,{room:room}),/*#__PURE__*/_jsx(Messages,{messages:messages,name:name}),/*#__PURE__*/_jsx(Input,{message:message,setMessage:setMessage,sendMessage:sendMessage})]}),/*#__PURE__*/_jsx(TextContainer,{users:users})]});};export default Chat;","map":{"version":3,"sources":["/home/apollonox/Documents/chat-app/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","TextContainer","InfoBar","Input","Messages","socket","Chat","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","ENDPOINT","parse","search","connectionOptions","connect","emit","off","on","sendMessage","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\nimport './Chat.css';\nimport TextContainer from '../TextContainer/TextContainer';\nimport InfoBar from '../InfoBar/InfoBar'\nimport Input from '../Input/Input'\nimport Messages from '../Messages/Messages'\n\nlet socket;\n\n\n\nconst Chat =({ location }) => {\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const [users, setUsers] = useState('');\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const ENDPOINT = 'https://aditya-react-chat-app.herokuapp.com/';\n    useEffect(() => {\n        const {name, room} = queryString.parse(location.search);\n\n        var connectionOptions =  {\n            \"force new connection\" : true,\n            \"reconnectionAttempts\": \"Infinity\", \n            \"timeout\" : 10000,                  \n            \"transports\" : [\"websocket\"]\n        };\n\n        socket = io.connect(ENDPOINT,connectionOptions);\n\n        // socket= io(ENDPOINT);\n\n        setName(name);\n        setRoom(room);\n\n        socket.emit('join', { name, room }, () =>{\n            \n        });\n\n        return () => {\n            socket.emit('disconnect');\n\n            socket.off();\n        }\n    }, [ENDPOINT, location.search]);\n\n    useEffect(() => {\n        socket.on('message', (message) =>{\n            setMessages([...messages, message]);\n        })\n\n        socket.on(\"roomData\", ({ users }) => {\n            setUsers(users);\n          });\n\n          return () => {\n            socket.off()\n          }\n\n    }, [messages]);\n\n    const sendMessage = (event) => {\n\n        event.preventDefault();\n\n        if(message){\n            socket.emit('sendMessage', message, () => setMessage(''));\n        }\n    }\n\n    console.log(message, messages);\n\n\n    return(\n        <div className=\"outerContainer\">\n            <div className=\"container\">\n                <InfoBar room={room}/>\n                <Messages messages={messages} name={name}/>\n                <Input message={message} setMessage={setMessage} sendMessage={sendMessage}/>\n            </div>\n            <TextContainer users={users}/>\n        </div>\n    )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}